{"version":3,"sources":["nav.js","image.js","biography.js","App.js","serviceWorker.js","index.js"],"names":["Nav","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","name","para","react_default","a","createElement","className","Component","Image","imgsrc","year","src","id","align","Biography","href","App","nav","src_image","biography","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oMAsBeA,oBAnBX,SAAAA,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACSI,MAAM,CACPC,KAAK,gBACLC,KAAK,+BAJJT,wEAUT,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAKT,KAAKI,MAAMC,MAChBE,EAAAC,EAAAC,cAAA,SAAIT,KAAKI,MAAME,cAdbK,cCkBHC,cAjBX,SAAAA,IAAa,IAAAf,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAY,IACTf,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAc,GAAAT,KAAAH,QACKI,MAAM,CACPS,OAAO,gFACPC,KAAK,4BAJAjB,wEAST,OACIU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAKM,IAAKf,KAAKI,MAAMS,OAAQG,GAAG,UAChCT,EAAAC,EAAAC,cAAA,MAAIQ,MAAM,UAAUjB,KAAKI,MAAMU,cAbvBH,aCuBLO,mLAnBP,OACIX,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIQ,MAAM,UAAV,sCACAV,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAA,mMACAF,EAAAC,EAAAC,cAAA,oMAEJF,EAAAC,EAAAC,cAAA,MAAIQ,MAAM,UAAV,2DAA2EV,EAAAC,EAAAC,cAAA,KAAGU,KAAK,+CAAR,sBAhBnER,aCiBTS,mLAVX,OACAb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACY,EAAD,MACAd,EAAAC,EAAAC,cAACa,EAAD,MACAf,EAAAC,EAAAC,cAACc,EAAD,cAPYZ,aCMEa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvB,EAAAC,EAAAC,cAACsB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.83865d37.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./App.css\";\r\nclass Nav extends Component{\r\n    constructor(){\r\n        super()\r\n            this.state={\r\n                name:\"Pablo Picasso\",\r\n                para:\"The man Who invented Cubism\",\r\n              }\r\n        }\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            <div className='navbar' >\r\n                <h1>{this.state.name}</h1>\r\n                <p>{this.state.para}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Nav","import React,{Component} from \"react\";\r\n\r\nclass Image extends Component{\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            imgsrc:\"https://mymodernmet.com/wp/wp-content/uploads/2019/02/pablo-picasso-facts.jpg\",\r\n            year:\"Pablo Picasso(1881-1973)\"\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"img\">\r\n            <img src={this.state.imgsrc} id=\"imgid\" />\r\n            <h1 align=\"center\">{this.state.year}</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Image","import React, {Component} from \"react\";\r\n\r\nclass Biography extends Component{\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 align=\"center\">A short Biography of Pablo Picasso</h1>\r\n                <ul>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                    <li>Picasso showed a passion and a skill for drawing from an early age. According to his mother, his first words were \"piz, piz\", a shortening of lápiz, the Spanish word for \"pencil\"</li>\r\n                </ul>\r\n                <h1 align=\"center\">If you want to read more about Pablo Picasso Go through <a href=\"https://en.wikipedia.org/wiki/Pablo_Picasso\">Wikipedia</a></h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Biography","import React, { Component } from 'react';\nimport './App.css';\nimport Nav from './nav.js'\nimport Image from './image.js'\nimport Biography from './biography';\n\nclass App extends Component {\n  \n  render() {\n    return (\n    <div className='App'>\n      <Nav  />\n      <Image/>\n      <Biography/>\n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}